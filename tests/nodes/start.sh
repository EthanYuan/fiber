#!/usr/bin/env bash

export RUST_BACKTRACE=full RUST_LOG=info,ckb_pcn_node=debug

script_dir="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
nodes_dir="$(dirname "$script_dir")/nodes"
deploy_dir="$(dirname "$script_dir")/deploy"

# The following environment variables are used in the contract tests.
# We may load all contracts within the following folder to the test environment.
export TESTING_CONTRACTS_DIR="$deploy_dir/contracts"

should_remove_old_state="${REMOVE_OLD_STATE:-}"

if [ -z "$should_remove_old_state" ]; then
    # Start the dev node in the background.
    "$deploy_dir/run-dev-node.sh" &
else
    # Start the dev node in the background.
    "$deploy_dir/run-dev-node.sh" -f &
    # Sleep some time for the node to start.
    sleep 5
    # Deploy contracts and wait for contract deployment to be done.
    "$deploy_dir/deploy.sh"
fi

# Load the environment variables from the .env file generated by create-dotenv-file.sh.
# These are environment variables that specify the contract hashes and other information.
export $(xargs < "$deploy_dir/.env")
# Local environment variables, may used to override the default ones.
export $(xargs < "$deploy_dir/.env.local")

# Start the dev node in the background.
cd "$nodes_dir" || exit 1
start() {
    cargo run -- "$@"
}

if [ "$#" -ne 1 ]; then
    LOG_SURFFIX=$' [node 1]\n' start -d 1 &
    LOG_SURFFIX=$' [node 2]\n' start -d 2 &
    LOG_SURFFIX=$' [node 3]\n' start -d 3 &
else
    for id in "$@"; do
        LOG_SURFFIX=" [$id]"$'\n' start -d "$id" &
    done
fi

wait
